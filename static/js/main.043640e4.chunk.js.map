{"version":3,"sources":["components/Forecast.jsx","components/Search.jsx","components/Date.jsx","components/Weather.jsx","components/Geolocation.jsx","components/Video.jsx","components/Webcam.jsx","components/GetWebcams.jsx","App.js","index.js"],"names":["Forecast","forecast","settings","dots","infinite","vertical","beforeChange","currentSlide","nextSlide","console","log","afterChange","slidesToShow","slidesToScroll","className","city","name","list","map","hour","key","id","dt_txt","Math","round","main","temp","src","weather","icon","alt","clouds","all","humidity","pressure","wind","speed","API_URL","Search","query","setQuery","setWeather","setForecast","type","placeholder","onChange","e","target","value","onKeyUp","fetch","process","then","response","json","data","err","search","LocalDate","today","Date","localOffset","timezone","getTimezoneOffset","localDate","setUTCSeconds","date","toLocaleDateString","undefined","weekday","year","month","day","time","toLocaleTimeString","minute","Weather","sys","country","feels_like","temp_min","temp_max","description","API_KEY","Geolocation","useEffect","currentCoordinates","navigator","geolocation","getCurrentPosition","coordinates","lat","coords","latitude","lon","longitude","alert","onClick","Video","frameBorder","height","Webcam","webcam","title","player","live","available","embed","location","region","GetWebcams","webcams","setWebcams","getWebcams","autoplay","autoplaySpeed","pauseOnHover","cssEase","responsive","breakpoint","initialSlide","coord","lng","radius","result","App","useState","rain","clear","fog","thunderstorm","floor","random","length","updateBackground","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.043640e4.chunk.js","sourcesContent":["import React from 'react';\nimport Slider from \"react-slick\";\n\nconst Forecast = ({ forecast }) => {\n\n\n    const settings = {\n\n        dots: true,\n        infinite: false,\n        vertical: true,\n        // verticalSwiping: true,\n        beforeChange: function(currentSlide, nextSlide) {\n          console.log(\"before change\", currentSlide, nextSlide);\n        },\n        afterChange: function(currentSlide) {\n          console.log(\"after change\", currentSlide);\n        },\n        slidesToShow: 12,\n        slidesToScroll: 1\n        // responsive: [\n        //     {\n        //       breakpoint: 1200,\n        //       settings: {\n        //         slidesToShow: 3,\n        //         slidesToScroll: 2,\n        //         initialSlide: 2\n        //       }\n        //     },\n        //     {\n        //       breakpoint: 900,\n        //       settings: {\n        //         slidesToShow: 2,\n        //         slidesToScroll: 1\n        //       }\n              \n        //     },\n        //     {\n        //         breakpoint: 600,\n        //         settings: {\n        //           slidesToShow: 1,\n        //           slidesToScroll: 1\n        //         }\n                \n        //       },\n        //   ]\n      };\n\n    const imgURL = 'https://openweathermap.org/img/w/';\n\n\n\n    return (\n        <div className=\"forecast-section\">\n            <h1 className=\"forecast-title\">Evolution of the weather in {forecast.city.name} (3 hours forecast)</h1>\n            < Slider {...settings}>\n                {forecast && forecast.list.map(hour => (\n                \n            <div className=\"forecast-box\" key={hour.id}>\n                <div className=\"day-forecast\">\n                    <div className=\"date\">{hour.dt_txt}</div>\n                    <div className=\"temp\">{Math.round(hour.main.temp)}ÂºC</div>\n                    <div>\n                        <img src={`${imgURL}${hour.weather[0].icon}.png`} alt=\"weather-icon\" className=\"weather-icon\"/>\n                        <div className=\"weather\">{hour.weather[0].main}</div>\n                     </div>\n                    <div className=\"forecast-details-box\">\n                        <p className=\"description\"><strong>Cloudiness:</strong> {hour.clouds.all}%</p>\n                        <p className=\"description\"><strong>Humidity:</strong> {hour.main.humidity}%</p>\n                        <p className=\"description\"><strong>Pressure:</strong> {hour.main.pressure} hPa</p>\n                        <p className=\"description\"><strong>Wind speed:</strong> {hour.wind.speed} meter/sec</p>\n                    </div>\n                </div>\n            </div>\n\n            ))}\n            </Slider>\n\n        </div>\n    )\n};\n\nexport default Forecast;","import React from 'react';\n\nconst API_KEY_WEATHER = process.env.REACT_APP_API_KEY_WEATHER;\nconst API_URL = 'https://api.openweathermap.org/data/2.5/'\nconst API_weather = 'weather?';\nconst API_forecast = 'forecast?';\n\n\nfunction Search( {query, setQuery, setWeather, setForecast} ){\n\n    \n    const search = (query) => {\n        if (query !== ''){\n        try {\n            fetch(`${API_URL}${API_weather}q=${query}&units=metric&appid=${API_KEY_WEATHER}`)\n                .then(response => response.json())\n                .then(data => {\n                    setWeather(data);\n                    console.log(data);\n                    // setQuery('');\n                })\n        } catch (err){\n            console.log(err);\n            }\n           \n\n            fetch(`${API_URL}${API_forecast}q=${query}&units=metric&appid=${API_KEY_WEATHER}`)\n                .then(response => response.json())\n                .then(data => {\n                    setForecast(data);\n                    console.log(data);\n            });\n\n        }\n    }\n\n\n\nreturn (\n\n        <input type='text'\n        className=\"search-bar\"\n        placeholder =\"Search for a city\"\n        onChange={e => setQuery(e.target.value)}\n        value={query}\n        onKeyUp={e => search(e.target.value)}\n        />\n)\n\n\n}\n\nexport default Search;","import React from 'react';\n\nfunction LocalDate ({ weather }) {\n\n    const today = new Date();\n    const localOffset = weather.timezone + today.getTimezoneOffset()*60;\n    const localDate = new Date(today.setUTCSeconds(localOffset));\n\n    const optionsDate = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'};\n    const optionsTime = { hour: 'numeric', minute: 'numeric'};\n    \n    const date = localDate.toLocaleDateString(undefined, optionsDate);\n    const time = localDate.toLocaleTimeString(undefined, optionsTime);\n\n\n    return (\n        <div className=\"date-box\">\n            <p className=\"date\">{date}</p>\n            <p className=\"time\">{time}</p>\n\n        </div>\n    )\n}\n\nexport default LocalDate;","import React from 'react';\nimport LocalDate from './Date';\n\nfunction Weather ({ weather }) {\n\n    return (\n      <div className=\"weather-section\">\n        <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n        < LocalDate weather={weather} />\n\n        <div className=\"weather-box\">\n              <div className=\"weather-temp-box\">\n                <h2>Temperature</h2>\n                <div className=\"temp\">\n                  <p>{Math.round(weather.main.temp)}ÂºC</p>\n                  <p className=\"feels-like\">Feels like: {Math.round(weather.main.feels_like)}ÂºC</p>\n                </div>\n                <div className=\"temp-variation\">\n                  <p>Min: {Math.round(weather.main.temp_min)}ÂºC</p>\n                  <p>Max: {Math.round(weather.main.temp_max)}ÂºC</p>\n                </div>\n              </div>\n              <div className=\"weather-main-box\">\n                <div className=\"weather\">{weather.weather[0].main}</div>\n                <p className=\"description\"><strong>{weather.weather[0].description}</strong></p>\n              </div>\n              <div className=\"weather-details-box\">\n                <h2>Details</h2>\n                <p className=\"description\"><strong>Cloudiness:</strong> {weather.clouds.all}%</p>\n                <p className=\"description\"><strong>Humidity:</strong> {weather.main.humidity}%</p>\n                <p className=\"description\"><strong>Pressure:</strong> {weather.main.pressure} hPa</p>\n                <p className=\"description\"><strong>Wind speed:</strong> {weather.wind.speed} meter/sec</p>\n              </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Weather;","import React, { useEffect } from 'react';\nconst API_KEY='36dc0a11010bf6f35af6d8551ab26296';\nconst API_URL = 'https://api.openweathermap.org/data/2.5/';\nconst API_weather = 'weather?';\nconst API_forecast = 'forecast?';\n\nfunction Geolocation ({setWeather, setForecast}) {\n    \n    useEffect(() => {\n        currentCoordinates();\n      }, []);\n\n    const fetchWeatherByCoordinates = (coordinates) => {\n        fetch(`${API_URL}${API_weather}lat=${coordinates.lat}&lon=${coordinates.lon}&units=metric&appid=${API_KEY}`)\n            .then(response => response.json())\n            .then(data => {\n                setWeather(data);\n                console.log(data);\n            });\n            fetch(`${API_URL}${API_forecast}lat=${coordinates.lat}&lon=${coordinates.lon}&units=metric&appid=${API_KEY}`)\n            .then(response => response.json())\n            .then(data => {\n                setForecast(data);\n                console.log(data);\n        });\n    };\n    \n    \n    const currentCoordinates = () => {\n        if(navigator.geolocation) {\n              const options = {timeout:60000};\n              navigator.geolocation.getCurrentPosition((data) => {\n                  fetchWeatherByCoordinates({lat: data.coords.latitude, lon: data.coords.longitude });\n              });\n           } else {\n              alert(\"Sorry, your browser does not support geolocation!\");\n           }\n    };\n\n\n    // useEffect(() => {\n    //     async function currentCoordinates();\n    //     });\n\n    return (\n    <button className=\"geolocation\" onClick={currentCoordinates}>Use Current Location</button>\n    )\n}\n\nexport default Geolocation;","import React from 'react';\n\nconst Video = ({ src }) => (\n    <iframe className=\"webcam-video\"\n    //   allowFullScreen\n      frameBorder=\"0\"\n      height='200'\n      src={src}\n    />\n  );\n  export default Video;","import React from 'react';\nimport Video from './Video';\n\nfunction Webcam ({ webcam }){\n\n\n    return (\n        <div className=\"webcam-card\">\n            <div className=\"webcam-title\">{webcam.title}</div>\n            \n            < Video src= {webcam.player.live.available == true ? \n                        (`${webcam.player.live.embed}+?autoplay=1`) : (\n                        `${webcam.player.day.embed}+?autoplay=1`)}\n            />\n            <div className=\"webcam-city\">Location: {webcam.location.city}</div>\n            <p className=\"webcam-region\">{webcam.location.region}, {webcam.location.country}</p>\n        </div>\n    )\n}\n\nexport default Webcam;","import React, { useEffect } from 'react';\nimport Webcam from './Webcam';\nimport Slider from \"react-slick\";\n\nconst API_KEY_WINDY = process.env.REACT_APP_API_KEY_WINDY;\nconst Base_URL_WINDY = 'https://api.windy.com/api/webcams/v2/list/'\n\nfunction GetWebcams ({ weather, webcams, setWebcams }) {\n\n    useEffect(() => {\n        if (weather.main != '') {\n            getWebcams();\n      }\n    }, []);\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        autoplay: true,\n        autoplaySpeed: 3000,\n        pauseOnHover: true,\n        cssEase: \"linear\",\n        responsive: [\n            {\n              breakpoint: 1200,\n              settings: {\n                slidesToShow: 2,\n                slidesToScroll: 2,\n                initialSlide: 2\n              }\n            },\n            {\n              breakpoint: 830,\n              settings: {\n                slidesToShow: 1,\n                slidesToScroll: 1\n              }\n            }\n          ]\n      };\n\n\n    const location = {\n        lat: weather.coord.lat,\n        lng: weather.coord.lon,\n        radius: 50\n    }\n\n    const getWebcams = () => {\n    try {\n        fetch(`${Base_URL_WINDY}nearby=${location.lat},${location.lng},${location.radius}/category=meteo/orderby=distance,desc/limit=20?show=webcams:location,image,player&key=${API_KEY_WINDY}`)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                setWebcams(data);\n              })\n    } catch (err){\n        console.log(err);\n        }\n    }\n\n    return (\n        <div className=\"webcam-section\">\n          <div className=\"webcam-header\">\n            <h2>Watch live Weather around <strong>{weather.name}</strong> {'(< 50km)'}</h2>\n            <button onClick={getWebcams}>Update Webcams</button>\n          </div>\n            {typeof webcams.result != \"undefined\" ? \n            (\n\n             <div className=\"webcams-list\">\n                < Slider {...settings}>\n                {webcams && webcams.result.webcams.map(webcam => (\n                    <Webcam webcam={webcam} key={webcam.id}/>))\n                }\n                </Slider>\n            </div>\n\n            )\n            : ('')\n            }\n        </div>\n    )\n}\n\nexport default GetWebcams;","import React, { useState, useEffect } from 'react';\nimport './assets/style/app.css';\nimport './assets/style/search.css';\nimport './assets/style/weather.css';\nimport './assets/style/forecast.css';\nimport './assets/style/webcams.css';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport Forecast from './components/Forecast';\nimport Search from './components/Search';\nimport Weather from './components/Weather';\nimport Geolocation from './components/Geolocation';\nimport GetWebcams from './components/GetWebcams';\n\n\n\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState('');\n  const [forecast, setForecast] = useState([]);\n  const [webcams, setWebcams] = useState([]);\n\n  const updateBackground = (weather) => {\n    const clouds = [\"app clouds\",\"app clouds1\", \"app clouds2\",\"app clouds3\",\"app clouds4\", \"app clouds5\"];\n    const rain = [\"app rain\",\"app rain1\", \"app rain2\",\"app rain3\",\"app rain4\", \"app rain5\",\n                \"app rain6\", \"app rain7\",\"app rain8\",\"app rain9\", \"app rain10\"];\n    const clear = [\"app clear\",\"app clear1\", \"app clear2\",\"app clear3\"];\n    const fog = [\"app fog\",\"app fog1\"];\n    const thunderstorm = [\"app thunderstorm\",\"app thunderstorm1\", \"app thunderstorm2\"];\n    switch (weather){\n      case \"Clouds\": return clouds[Math.floor(Math.random()* clouds.length)] ;\n      case \"Clear\": return clear[Math.floor(Math.random()* clear.length)] ;\n      case \"Rain\": return rain[Math.floor(Math.random()* rain.length)];\n      case \"Fog\": return fog[Math.floor(Math.random()* fog.length)];\n      case \"Snow\": return \"app snow\";\n      case 'Thunderstorm': return thunderstorm[Math.floor(Math.random()* thunderstorm.length)];\n      default: return \"app;\"\n    }\n  }\n\n\n  return (\n    \n    <div className = {typeof weather.main != \"undefined\" ? updateBackground(weather.weather[0].main) : \"app\" }>\n      <main>\n        <div className=\"search-box\">\n          <Search query={query} setQuery={setQuery} setWeather={setWeather} setForecast={setForecast}/>\n          <Geolocation setWeather={setWeather} setForecast={setForecast}/>\n        </div>\n\n\n        {(typeof weather.main != \"undefined\") ? \n          <Weather weather={weather}/> : ('')\n        }\n        {(typeof weather.main != \"undefined\") ? \n          <GetWebcams weather={weather} webcams={webcams} setWebcams={setWebcams}/> : ('')\n        }\n\n        {( typeof forecast.list != \"undefined\" ) ? \n          <Forecast forecast={forecast} /> : \n          (weather !== '' ?\n            (<div className=\"error-message\">\n              <h2>Sorry but we could not find any weather forecast.</h2>\n              <h3>Please try again with another location</h3>\n            </div>)\n            : ('')\n          )\n        }\n      </main>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}